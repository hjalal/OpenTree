mean(f2)
mean(f3)
f1 <- c(31,34,34,34,43,35,38,36,36,45)
f2 <- c(27,27,25,34,21,30,34,30,32,33)
f3 <- c(36,37,37,34,37,22,33,29,36,42)
f4 <- c(33,27,35,25,29,20,25,40,35,29)
mean(f2)
mean(f3)
y <- c(f1,f2,f3,f4)
f1 <- c(rep(1,length(f1)), rep(0, 30))
f2 <- rep(0, 40)
f2[11:20] <- 1
f3 <- rep(0, 40)
f3[21:30] <- 1
f4 <- rep(0, 40)
f4[31:40] <- 1
fitind <- lm(y~f1+f2+f3)
X <- model.matrix(fitind) # This is the design matrtrix
XPX <- t(X)%*%X
XPXinv <- solve(XPX)
XPY <- t(X)%*%y
n <- length(y)
n
I <- diag(n)
one <- rep(1,n)
J <- one%*%t(one)
t(y)%*%(I-X%*%XPXinv%*%t(X))%*%y
t(y)%*%(X%*%XPXinv%*%t(X)-(1/n)*J)%*%y
summary(fitind)
29.8+1.96*1.599
29.8-1.96*1.599
confint(fitind)
XPXinv
I <- diag(n)
one <- rep(1,n)
J <- one%*%t(one)
t(y)%*%(I-X%*%XPXinv%*%t(X))%*%y
t(y)%*%(X%*%XPXinv%*%t(X)-(1/n)*J)%*%y
XPY
f1 <- c(31,34,34,34,43,35,38,36,36,45)
f2 <- c(27,27,25,28,21,36,34,30,32,33)
f3 <- c(36,37,37,34,37,28,33,29,36,42)
f4 <- c(33,27,35,25,29,20,25,40,35,29)
mean(f2)
mean(f3)
f1 <- c(31,34,34,34,43,35,38,36,36,45)
f2 <- c(27,27,25,28,21,36,34,30,32,33)
f3 <- c(36,37,37,28,37,28,33,29,36,42)
f4 <- c(33,27,35,25,29,20,25,40,35,29)
mean(f2)
mean(f3)
y <- c(f1,f2,f3,f4)
f1 <- c(rep(1,length(f1)), rep(0, 30))
f2 <- rep(0, 40)
f2[11:20] <- 1
f3 <- rep(0, 40)
f3[21:30] <- 1
f4 <- rep(0, 40)
f4[31:40] <- 1
fitind <- lm(y~f1+f2+f3)
X <- model.matrix(fitind) # This is the design matrtrix
XPX <- t(X)%*%X
XPXinv <- solve(XPX)
XPY <- t(X)%*%y
n <- length(y)
n
I <- diag(n)
one <- rep(1,n)
J <- one%*%t(one)
t(y)%*%(I-X%*%XPXinv%*%t(X))%*%y
f1 <- c(31,34,34,34,43,35,38,36,36,45)
f2 <- c(27,27,25,34,21,30,34,30,32,33)
f3 <- c(36,37,37,34,37,22,33,29,36,42)
f4 <- c(33,27,35,25,29,20,25,40,35,29)
mean(f2)
mean(f3)
y <- c(f1,f2,f3,f4)
f1 <- c(rep(1,length(f1)), rep(0, 30))
f2 <- rep(0, 40)
f2[11:20] <- 1
f3 <- rep(0, 40)
f3[21:30] <- 1
f4 <- rep(0, 40)
f4[31:40] <- 1
fitind <- lm(y~f1+f2+f3)
X <- model.matrix(fitind) # This is the design matrtrix
XPX <- t(X)%*%X
XPXinv <- solve(XPX)
XPY <- t(X)%*%y
n <- length(y)
n
I <- diag(n)
one <- rep(1,n)
J <- one%*%t(one)
t(y)%*%(I-X%*%XPXinv%*%t(X))%*%y
t(y)%*%(X%*%XPXinv%*%t(X)-(1/n)*J)%*%y
summary(fitind)
confint(fitind)
6.8*qt(36,0.975)*
summary(fitind)
6.8*qt(36,0.975)*2.261
6.8*qt(0.975,36)*2.261
6.8+qt(0.975,36)*2.261
confint(fitind)
6.8-qt(0.975,36)*2.261
summary(fitind)
qt(0.975,36)
29.8+2.028*1.599
29.8-2.028*1.599
summary(fitind)
6.8+2.028*2.261
6.8-2.028*2.261
satis <- read.table("satis.txt")
y <- satis[,1]
x1 <- satis[,2]
x2 <- satis[,3]
fitsatis <- lm(y~x1+x2)
sd(predict(fitsatis))
summary(fitsatis)$r.squared
y
y
x
y
x1
x2
satis <- read.table("satis.txt")
y <- satis[,1]
x1 <- satis[,2]
x2 <- satis[,3]
fitsatis <- lm(y~x1+x2)
sd(predict(fitsatis))
satis <- read.table("satis.txt")
y <- satis[,1]
x1 <- satis[,2]
x2 <- satis[,3]
fitsatis <- lm(y~x1+x2)
sd(predict(fitsatis))
satis <- read.table("satis.txt")
y <- satis[,1]
x1 <- satis[,2]
x2 <- satis[,3]
fitsatis <- lm(y~x1+x2)
sd(predict(fitsatis))
satis <- read.table("satis.txt")
y <- satis[,1]
x1 <- satis[,2]
x2 <- satis[,3]
fitsatis <- lm(y~x1+x2)
sd(predict(fitsatis))
satis <- read.table("satis.txt")
y <- satis[,1]
x1 <- satis[,2]
x2 <- satis[,3]
fitsatis <- lm(y~x1+x2)
sd(predict(fitsatis))
satis <- read.table("satis.txt")
y <- satis[,1]
x1 <- satis[,2]
x2 <- satis[,3]
fitsatis <- lm(y~x1+x2)
sd(predict(fitsatis))
satis <- read.table("satis.txt")
y <- satis[,1]
x1 <- satis[,2]
x2 <- satis[,3]
fitsatis <- lm(y~x1+x2)
sd(predict(fitsatis))
satis <- read.table("satis.txt")
y <- satis[,1]
x1 <- satis[,2]
x2 <- satis[,3]
fitsatis <- lm(y~x1+x2)
sd(predict(fitsatis))
satis <- read.table("satis.txt")
y <- satis[,1]
x1 <- satis[,2]
x2 <- satis[,3]
fitsatis <- lm(y~x1+x2)
sd(predict(fitsatis))
satis <- read.table("satis.txt")
y <- satis[,1]
x1 <- satis[,2]
x2 <- satis[,3]
fitsatis <- lm(y~x1+x2)
sd(predict(fitsatis))
satis <- read.table("satis.txt")
y <- satis[,1]
x1 <- satis[,2]
x2 <- satis[,3]
fitsatis <- lm(y~x1+x2)
sd(predict(fitsatis))
satis <- read.table("satis.txt")
y <- satis[,1]
x1 <- satis[,2]
x2 <- satis[,3]
fitsatis <- lm(y~x1+x2)
sd(predict(fitsatis))
satis <- read.table("satis.txt")
y <- satis[,1]
x1 <- satis[,2]
x2 <- satis[,3]
fitsatis <- lm(y~x1+x2)
sd(predict(fitsatis))
satis <- read.table("satis.txt")
y <- satis[,1]
x1 <- satis[,2]
x2 <- satis[,3]
fitsatis <- lm(y~x1+x2)
sd(predict(fitsatis))
satis <- read.table("satis.txt")
y <- satis[,1]
x1 <- satis[,2]
x2 <- satis[,3]
fitsatis <- lm(y~x1+x2)
sd(predict(fitsatis))
satis <- read.table("satis.txt")
y <- satis[,1]
x1 <- satis[,2]
x2 <- satis[,3]
fitsatis <- lm(y~x1+x2)
sd(predict(fitsatis))
summary(fitsatis)$r.squared
satis <- read.table("satis.txt")
y <- satis[,1]
x1 <- satis[,2]
x2 <- satis[,3]
fitsatis <- lm(y~x1+x2)
sd(predict(fitsatis))
satis <- read.table("satis.txt")
y <- satis[,1]
x1 <- satis[,2]
x2 <- satis[,3]
fitsatis <- lm(y~x1+x2)
sd(predict(fitsatis))
satis <- read.table("satis.txt")
y <- satis[,1]
x1 <- satis[,2]
x2 <- satis[,3]
fitsatis <- lm(y~x1+x2)
sd(predict(fitsatis))
satis <- read.table("satis.txt")
y <- satis[,1]
x1 <- satis[,2]
x2 <- satis[,3]
fitsatis <- lm(y~x1+x2)
sd(predict(fitsatis))
summary(fitsatis)$r.squared
knitr::opts_chunk$set(echo = TRUE)
runApp(appDir = C:/Users/alany/Desktop/GitHub local/OpenTree/OpenTree/workin, port = getOption("shiny.port"),
runApp(appDir = 'C:/Users/alany/Desktop/GitHub local/OpenTree/OpenTree/working', port = getOption("shiny.port"),
launch.browser = getOption("shiny.launch.browser", interactive()),
host = getOption("shiny.host", "127.0.0.1"), workerId = "",
quiet = FALSE, display.mode = c("auto", "normal", "showcase"))
setwd("C:/Users/alany/Desktop/GitHub local/OpenTree/OpenTree")
library(shiny)
runApp(appDir = 'C:/Users/alany/Desktop/GitHub local/OpenTree/OpenTree/working', port = getOption("shiny.port"),
launch.browser = getOption("shiny.launch.browser", interactive()),
host = getOption("shiny.host", "127.0.0.1"), workerId = "",
quiet = FALSE, display.mode = c("auto", "normal", "showcase"))
library(shiny)
runApp(appDir = 'C:/Users/alany/Desktop/GitHub local/OpenTree/OpenTree/working', port = getOption("shiny.port"),
launch.browser = getOption("shiny.launch.browser", interactive()),
host = getOption("shiny.host", "127.0.0.1"), workerId = "",
quiet = FALSE, display.mode = c("auto", "normal", "showcase"))
stopApp(returnValue = "TreeDataset.txt")
library(shiny)
runApp(appDir = 'C:/Users/alany/Desktop/GitHub local/OpenTree/OpenTree/working', port = getOption("shiny.port"),
launch.browser = getOption("shiny.launch.browser", interactive()),
host = getOption("shiny.host", "127.0.0.1"), workerId = "",
quiet = FALSE, display.mode = c("auto", "normal", "showcase"))
library(shiny)
runApp(appDir = 'C:/Users/alany/Desktop/GitHub local/OpenTree/OpenTree/working', port = getOption("shiny.port"),
launch.browser = getOption("shiny.launch.browser", interactive()),
host = getOption("shiny.host", "127.0.0.1"), workerId = "",
quiet = FALSE, display.mode = c("auto", "normal", "showcase"))
runApp('working')
runApp('test')
runApp('working')
shiny::runApp('working')
runApp('working')
runApp('working')
runApp('working')
runApp('working')
runApp('working')
runApp('working')
knitr::opts_chunk$set(echo = TRUE)
library(shiny)
runApp(appDir = 'C:/Users/alany/Desktop/GitHub local/OpenTree/OpenTree/working', port = getOption("shiny.port"),
launch.browser = getOption("shiny.launch.browser", interactive()),
host = getOption("shiny.host", "127.0.0.1"), workerId = "",
quiet = FALSE, display.mode = c("auto", "normal", "showcase"))
data <- reactiveValues()
data
runApp('working')
runApp('working')
shiny::runApp('working')
runApp('working')
runApp('working')
runApp('working')
runApp('working')
shiny::runApp('working')
source("www/opentree_functions.R")
# ========= RUN =========
# define a model name
treeName <- "test2" #placeholdername for model ... use the File commands on OpenTree to create NEW, Open or Save OpenTrees.
# 1. open the UI and create/modify your tree
runOpenTreeUI() #runs the OpenTreeUI
# 2. convert the tree into a summary dataframe
opentree_df <- create_OpenTree_df(treeName)
source("www/opentree_functions.R")
# ========= RUN =========
# define a model name
treeName <- "test2" #placeholdername for model ... use the File commands on OpenTree to create NEW, Open or Save OpenTrees.
# 1. open the UI and create/modify your tree
runOpenTreeUI() #runs the OpenTreeUI
# ========= RUN =========
# define a model name
treeName <- "test2" #placeholdername for model ... use the File commands on OpenTree to create NEW, Open or Save OpenTrees.
source("www/opentree_functions.R")
# ========= RUN =========
# define a model name
treeName <- "test2" #placeholdername for model ... use the File commands on OpenTree to create NEW, Open or Save OpenTrees.
# 1. open the UI and create/modify your tree
runOpenTreeUI() #runs the OpenTreeUI
# ========= RUN =========
# define a model name
treeName <- "test2" #placeholdername for model ... use the File commands on OpenTree to create NEW, Open or Save OpenTrees.
# 1. open the UI and create/modify your tree
runOpenTreeUI() #runs the OpenTreeUI
source("www/opentree_functions.R")
# ========= RUN =========
# define a model name
treeName <- "test2" #placeholdername for model ... use the File commands on OpenTree to create NEW, Open or Save OpenTrees.
# 1. open the UI and create/modify your tree
runOpenTreeUI() #runs the OpenTreeUI
# ========= RUN =========
# define a model name
treeName <- "test2" #placeholdername for model ... use the File commands on OpenTree to create NEW, Open or Save OpenTrees.
# 1. open the UI and create/modify your tree
runOpenTreeUI() #runs the OpenTreeUI
treeName
# 1. open the UI and create/modify your tree
runOpenTreeUI() #runs the OpenTreeUI
treeName
# 1. open the UI and create/modify your tree
runOpenTreeUI() #runs the OpenTreeUI
source("www/opentree_functions.R")
# ========= RUN =========
# define a model name
treeName <- "test2" #placeholdername for model ... use the File commands on OpenTree to create NEW, Open or Save OpenTrees.
# 1. open the UI and create/modify your tree
runOpenTreeUI() #runs the OpenTreeUI
setwd("~/Downloads/test/OpenTree/OpenTree/working/")
source("www/opentree_functions.R")
# ========= RUN =========
# define a model name
treeName <- "test2" #placeholdername for model ... use the File commands on OpenTree to create NEW, Open or Save OpenTrees.
# 1. open the UI and create/modify your tree
runOpenTreeUI() #runs the OpenTreeUI
setwd("~/Downloads/test/OpenTree/OpenTree/working/")
source("www/opentree_functions.R")
# ========= RUN =========
# define a model name
treeName <- "test2" #placeholdername for model ... use the File commands on OpenTree to create NEW, Open or Save OpenTrees.
# 1. open the UI and create/modify your tree
runOpenTreeUI() #runs the OpenTreeUI
source("www/opentree_functions.R")
# ========= RUN =========
# define a model name
treeName <- "test2" #placeholdername for model ... use the File commands on OpenTree to create NEW, Open or Save OpenTrees.
# 1. open the UI and create/modify your tree
runOpenTreeUI() #runs the OpenTreeUI
source("www/opentree_functions.R")
# ========= RUN =========
# define a model name
treeName <- "test2" #placeholdername for model ... use the File commands on OpenTree to create NEW, Open or Save OpenTrees.
# 1. open the UI and create/modify your tree
runOpenTreeUI() #runs the OpenTreeUI
source("www/opentree_functions.R")
# ========= RUN =========
# define a model name
treeName <- "test2" #placeholdername for model ... use the File commands on OpenTree to create NEW, Open or Save OpenTrees.
# 1. open the UI and create/modify your tree
runOpenTreeUI() #runs the OpenTreeUI
# ========= RUN =========
# define a model name
treeName <- "test2" #placeholdername for model ... use the File commands on OpenTree to create NEW, Open or Save OpenTrees.
# 1. open the UI and create/modify your tree
runOpenTreeUI() #runs the OpenTreeUI
treeName
# ========= RUN =========
# define a model name
treeName <- "test1" #placeholdername for model ... use the File commands on OpenTree to create NEW, Open or Save OpenTrees.
treeName
# 2. convert the tree into a summary dataframe
opentree_df <- create_OpenTree_df(treeName)
# ========= RUN =========
# define a model name
treeName <- "test1" #placeholdername for model ... use the File commands on OpenTree to create NEW, Open or Save OpenTrees.
# ========= RUN =========
# define a model name
treeName <- "test1" #placeholdername for model ... use the File commands on OpenTree to create NEW, Open or Save OpenTrees.
# 1. open the UI and create/modify your tree
runOpenTreeUI() #runs the OpenTreeUI
# 2. convert the tree into a summary dataframe
opentree_df <- create_OpenTree_df(treeName)
# 2. convert the tree into a summary dataframe
opentree_df <- create_OpenTree_df(treeName)
# decision tree - Doubilet Example ========
params = list(pDieBiopsy = 0.004,
pSevBiopsy = 0.01,
pModBiopsy = 0.03,
sensBiopsy = 0.95,
specBiopsy = 0.99,
pHSE = 0.4, #overall
pDieHSE = .7,
pSevHSE = .333,
pModHSE = .5,
fDie = .37,
fSev = .2,
fMod = .2,
pDieNoHSE = .18,
pSevNoHSE = .122,
pModNoHSE = .139,
addProbDie = .004,
addProbSev = .01,
addProbMod = .02,
uDie = 0,
uSev = 0.02,
uMod = .8,
uMld = 1)
evaluate_string(opentree_df$ev_string[1], params)
# 2. convert the tree into a summary dataframe
opentree_df <- create_OpenTree_df(treeName)
# 2. convert the tree into a summary dataframe
opentree_df <- create_OpenTree_df(treeName)
opentree_df
create_OpenTree_df(treeName)
treeName
readOpenTreeModel(treeName)
# first convert json to dataframe
model_df <- readOpenTreeModel(treeName) #converts the model into a df
model_df
source("www/opentree_functions.R")
# ========= RUN =========
# define a model name
treeName <- "test1" #placeholdername for model ... use the File commands on OpenTree to create NEW, Open or Save OpenTrees.
# 1. open the UI and create/modify your tree
runOpenTreeUI() #runs the OpenTreeUI
setwd("~/Downloads/test/OpenTree/OpenTree/working")
setwd("~/Downloads/test/OpenTree/OpenTree/working")
source("www/opentree_functions.R")
# ========= RUN =========
# define a model name
treeName <- "test1" #placeholdername for model ... use the File commands on OpenTree to create NEW, Open or Save OpenTrees.
# 1. open the UI and create/modify your tree
runOpenTreeUI() #runs the OpenTreeUI
runOpenTreeUI <- function(){
#Run shiny app in the background
jobRunScript("shiny-run.R",
"OpenTree",
importEnv = FALSE) #Relative Path
# See the tree in the viewer window of RStudio
rstudioapi::viewer("http://localhost:3522")
}
# 1. open the UI and create/modify your tree
runOpenTreeUI() #runs the OpenTreeUI
treeName
runOpenTreeUI <- function(){
#Run shiny app in the background
jobRunScript("shiny-run.R",
"OpenTree",
importEnv = FALSE) #Relative Path
# See the tree in the viewer window of RStudio
rstudioapi::viewer("http://localhost:3522")
}
source("www/opentree_functions.R")
# ========= RUN =========
# define a model name
treeName <- "test1" #placeholdername for model ... use the File commands on OpenTree to create NEW, Open or Save OpenTrees.
# 1. open the UI and create/modify your tree
runOpenTreeUI() #runs the OpenTreeUI
runOpenTreeUI <- function(){
#Run shiny app in the background
jobRunScript("shiny-run.R",
"OpenTree",
importEnv = TRUE) #Relative Path
# See the tree in the viewer window of RStudio
rstudioapi::viewer("http://localhost:3522")
}
# 1. open the UI and create/modify your tree
runOpenTreeUI() #runs the OpenTreeUI
shiny::runApp()
setwd("~/Downloads/test/OpenTree/OpenTree/working")
source("www/opentree_functions.R")
source("www/opentree_functions.R")
# ========= RUN =========
# define a model name
treeName <- "test1" #placeholdername for model ... use the File commands on OpenTree to create NEW, Open or Save OpenTrees.
# 1. open the UI and create/modify your tree
runOpenTreeUI() #runs the OpenTreeUI
# 2. convert the tree into a summary dataframe
opentree_df <- create_OpenTree_df(treeName)
treeName
create_OpenTree_df(treeName)
setwd("/Users/hawre/Downloads/OpenTree-reactiveTree/OpenTree/working")
source("opentree_functions.R")
# ========= RUN =========
# define a model name
treeName <- "test1" #placeholdername for model ... use the File commands on OpenTree to create NEW, Open or Save OpenTrees.
# 1. open the UI and create/modify your tree
runOpenTreeUI() #runs the OpenTreeUI
